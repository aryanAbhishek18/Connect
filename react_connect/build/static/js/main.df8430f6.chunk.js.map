{"version":3,"sources":["logo.svg","components/Home.js","components/ChangePassword.js","components/UpdateProfile.js","components/Profile.js","components/AddFriends.js","components/FriendsManager.js","components/FriendsList.js","components/SendMessage.js","components/ReceivedMessages.js","components/Messaging.js","components/Portal.js","components/SignUp.js","components/SignIn.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","URL","props","react_default","a","createElement","className","name","ChangePassword","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","newPass","confNewPass","errorMsg","passChangeHandler","bind","assertThisInitialized","newPasswordChangeHandler","confNewPasswordChangeHandler","event","setState","target","value","preventDefault","trim","url","fetch","method","headers","Content-Type","body","JSON","stringify","password","token","sessionStorage","getItem","res","json","data","status","alert","message","_context","t0","noValidate","type","onChange","required","onClick","React","Component","email","dob","address","phone","hobby","dobChangeHandler","addressChangeHandler","phoneChangeHandler","hobbyChangeHandler","updateProfileHandler","user","_context2","disabled","Profile","UpdateProfile","components_ChangePassword","AddFriends","nameInput","usersMatched","nameInputChangeHandler","searchFriendHandler","addFriendHandler","toLowerCase","_this2","friends","map","friend","key","_id","FriendsList","FriendsManager","friendSelectedOption","selectedFriendName","selectedFriendEmail","selectedFriendDOB","selectedFriendAddress","selectedFriendPhone","selectedFriendHobby","friendSelectChangeHandler","friendSelectDetailHandler","friendSelectDetailClear","console","log","options","forEach","push","components_AddFriends","components_FriendsList","friendSelected","SendMessage","messageChangeHandler","messageClearHandler","sendMessageHandler","ReceivedMessages","messages","date","Messaging","components_SendMessage","components_ReceivedMessages","Portal","react_router_dom","src","logo","alt","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","signOutHandler","react_router","path","components_Messaging","components_FriendsManager","components_Profile","components_Home","SignUpForm","pass","confPass","signUpHandler","nameChangeHandler","emailChangeHandler","confPassChangeHandler","setItem","doSignUp","SignInForm","signInHandler","passwordChangeHandler","doSignIn","App","isLoggedIn","e","removeItem","LoggedInContent","components_Portal","home","SignIn","SignUp","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.df8430f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport '../css/Home.css';\r\n\r\nfunction Home(props){\r\n    return (\r\n        <div className=\"container home-div\">\r\n            <h2 className=\"home-greeting-msg\">\r\n                Hey {props.name}! What's up?\r\n            </h2>\r\n            <h4>Welcome to Connect!</h4>\r\n            <br></br>\r\n            <br></br>\r\n            <h5>Connect is a prototype of a social networking web application.</h5>\r\n            <br></br>\r\n            <br></br>\r\n            <h5>It supports following features: </h5>\r\n            <br></br>\r\n            <p>* Sign Up</p>\r\n            <p>*  Sign In</p>\r\n            <p>* Own profile viewing and editing</p>\r\n            <p>* Adding friends</p>\r\n            <p>* Viewing friends profile</p>\r\n            <p>* Messaging to friends</p>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport '../css/ChangePassword.css';\r\n\r\nlet URL;\r\nif (process.env.NODE_ENV === 'development') {\r\n    URL = 'http://localhost:5000';\r\n} else {\r\n    URL = 'https://connect.aryanabhi.in';\r\n}\r\n\r\nclass ChangePassword extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newPass: '',\r\n            confNewPass: '',\r\n            errorMsg: ''\r\n        };\r\n        this.passChangeHandler = this.passChangeHandler.bind(this);\r\n        this.newPasswordChangeHandler = this.newPasswordChangeHandler.bind(this);\r\n        this.confNewPasswordChangeHandler = this.confNewPasswordChangeHandler.bind(this);\r\n    }\r\n\r\n    newPasswordChangeHandler(event) {\r\n        this.setState({\r\n            newPass: event.target.value\r\n        });\r\n    }\r\n\r\n    confNewPasswordChangeHandler(event) {\r\n        this.setState({\r\n            confNewPass: event.target.value\r\n        });\r\n    }\r\n\r\n    async passChangeHandler(event) {\r\n        //check sign in details and verify with database, then call doSignIn\r\n        event.preventDefault();\r\n        let newPass = this.state.newPass.trim();\r\n        let confNewPass = this.state.confNewPass.trim();\r\n        if(!newPass) {\r\n            this.setState({\r\n                errorMsg: 'New pass empty!'\r\n            });\r\n        }\r\n        else if(!confNewPass) {\r\n            this.setState({\r\n                errorMsg: 'Conf new pass empty!'\r\n            });\r\n        }\r\n        else if(newPass!==confNewPass) {\r\n            this.setState({\r\n                errorMsg: 'New pass and conf pass do not match!'\r\n            });\r\n        }\r\n        else{\r\n            this.setState({\r\n                errorMsg: ''\r\n            });\r\n            try {\r\n                const url = URL + '/api/profile/changePassword';\r\n                const res = await fetch(url, {\r\n                    method: 'POST',\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({ \r\n                        password: this.state.newPass,\r\n                        token: sessionStorage.getItem('assistToken') \r\n                    }),\r\n                });\r\n                const data = await res.json();\r\n                if (data.status !== 200) {\r\n                    return alert(data.message);\r\n                }\r\n                \r\n                alert('Password changed successfully!!');\r\n                this.setState({\r\n                    newPass: '',\r\n                    confNewPass: ''\r\n                });\r\n\r\n            } catch (e) {\r\n                alert(e.message);\r\n            }\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container change-pass-div\">\r\n                <form noValidate>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">New password:</label>\r\n                        <input type=\"password\" className=\"form-control\" value={this.state.newPass} onChange={this.newPasswordChangeHandler} required=\"required\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Confirm new password:</label>\r\n                        <input type=\"password\" className=\"form-control\" value={this.state.confNewPass} onChange={this.confNewPasswordChangeHandler} required=\"required\"></input>\r\n                    </div>\r\n                    <p className='errorMsg'>{this.state.errorMsg}</p>\r\n                    <span><button type=\"submit\" className=\"btn btn-outline-info\" onClick={this.passChangeHandler}>Submit</button></span>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChangePassword;","import React from 'react';\r\nimport '../css/ChangePassword.css';\r\n\r\nlet URL;\r\nif (process.env.NODE_ENV === 'development') {\r\n    URL = 'http://localhost:5000';\r\n} else {\r\n    URL = 'https://connect.aryanabhi.in';\r\n}\r\n\r\nclass ChangePassword extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            dob: '',\r\n            address: '',\r\n            phone: '',\r\n            hobby: ''\r\n        };\r\n        this.dobChangeHandler = this.dobChangeHandler.bind(this);\r\n        this.addressChangeHandler = this.addressChangeHandler.bind(this);\r\n        this.phoneChangeHandler = this.phoneChangeHandler.bind(this);\r\n        this.hobbyChangeHandler = this.hobbyChangeHandler.bind(this);\r\n        this.updateProfileHandler = this.updateProfileHandler.bind(this);\r\n    }\r\n\r\n    dobChangeHandler(event) {\r\n        this.setState({\r\n            dob: event.target.value\r\n        });\r\n    }\r\n\r\n    addressChangeHandler(event) {\r\n        this.setState({\r\n            address: event.target.value\r\n        });\r\n    }\r\n\r\n    phoneChangeHandler(event) {\r\n        this.setState({\r\n            phone: event.target.value\r\n        });\r\n    }\r\n\r\n    hobbyChangeHandler(event) {\r\n        this.setState({\r\n            hobby: event.target.value\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try{\r\n            const token = sessionStorage.getItem('assistToken');\r\n            if(!token){\r\n                return alert('Token missing! Please sign out and sign in again!');\r\n            }\r\n            else{\r\n                const url = URL + '/api/profile/getProfile'\r\n                const res = await fetch(url, {\r\n                    method: 'POST',\r\n                    headers: {\"Content-Type\": \"application/json\"},\r\n                    body: JSON.stringify({\r\n                        token: sessionStorage.getItem('assistToken')\r\n                    }),\r\n                });\r\n\r\n                const data = await res.json();\r\n                if(data.status !== 200) {\r\n                    alert(data.message);\r\n                    alert('There was some error! Please sign out and sign in again.');\r\n                }\r\n                else{\r\n                    const name = data.user.name;\r\n                    const email = data.user.email;\r\n                    const dob = data.user.dob;\r\n                    const address = data.user.address;\r\n                    const phone = data.user.phone;\r\n                    const hobby = data.user.hobby;\r\n\r\n                    this.setState({\r\n                        name: name,\r\n                        email: email,\r\n                        dob: dob,\r\n                        address: address,\r\n                        phone: phone,\r\n                        hobby: hobby\r\n                    });\r\n                }\r\n            }\r\n        }catch(e){\r\n            alert('There was some error! Please sign out and sign in again.');\r\n        }\r\n    }\r\n\r\n    async updateProfileHandler(event) {\r\n        //check sign in details and verify with database, then call doSignIn\r\n        event.preventDefault();\r\n        let dob = this.state.dob.trim();\r\n        let address = this.state.address.trim();\r\n        let phone = this.state.phone.trim();\r\n\r\n        if(!dob) {\r\n            alert('DOB empty!')\r\n        }\r\n        else if(!address) {\r\n            alert('Address empty!');\r\n        }\r\n        else if(!phone) {\r\n            alert('Phone empty!');\r\n        }\r\n        else{\r\n            try {\r\n                const url = URL + '/api/profile/updateProfile';\r\n                const res = await fetch(url, {\r\n                    method: 'POST',\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({ \r\n                        dob: dob,\r\n                        address: address,\r\n                        phone: phone,\r\n                        hobby: this.state.hobby,\r\n                        token: sessionStorage.getItem('assistToken') \r\n                    }),\r\n                });\r\n                const data = await res.json();\r\n                if (data.status !== 200) {\r\n                    return alert(data.message);\r\n                }\r\n                \r\n                alert('Profile updated successfully!!');\r\n\r\n            } catch (e) {\r\n                alert(e.message);\r\n            }\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container change-pass-div\">\r\n                <form noValidate>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Name:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.name} disabled={true} required=\"required\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Email:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.email} disabled={true} required=\"required\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Date of birth:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.dob} onChange={this.dobChangeHandler} required=\"required\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Address:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.address} onChange={this.addressChangeHandler} required=\"required\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Phone Number:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.phone} onChange={this.phoneChangeHandler} required=\"required\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Hobby:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.hobby} onChange={this.hobbyChangeHandler} required=\"required\"></input>\r\n                    </div>\r\n                    <span><button type=\"submit\" className=\"btn btn-outline-info\" onClick={this.updateProfileHandler}>Update</button></span>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChangePassword;","import React from 'react';\r\nimport '../css/Profile.css';\r\nimport ChangePassword from './ChangePassword';\r\nimport UpdateProfile from './UpdateProfile';\r\n\r\n\r\nfunction Profile(props){\r\n    return (\r\n        <div className=\"container profile-main-div\">\r\n            <h3 className=\"profile-greeting-msg\">\r\n                You can view and edit your profile details here.\r\n            </h3>\r\n            <div className=\"container profile-edit-div\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <UpdateProfile /> \r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <ChangePassword />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport '../css/AddFriends.css';\r\n\r\nlet URL;\r\nif (process.env.NODE_ENV === 'development') {\r\n    URL = 'http://localhost:5000';\r\n} else {\r\n    URL = 'https://connect.aryanabhi.in';\r\n}\r\n\r\nclass AddFriends extends React.Component {\r\n    //this.props.email\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nameInput: '',\r\n            usersMatched: []\r\n        };\r\n\r\n        this.nameInputChangeHandler = this.nameInputChangeHandler.bind(this);\r\n        this.searchFriendHandler = this.searchFriendHandler.bind(this);\r\n        this.addFriendHandler = this.addFriendHandler.bind(this);\r\n    }\r\n\r\n    async addFriendHandler(name, email) {\r\n        try {\r\n            const url = URL + '/api/friends/addFriend';\r\n            const res = await fetch(url, {\r\n                method: 'POST',\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ \r\n                    name: name,\r\n                    email: email,\r\n                    token: sessionStorage.getItem('assistToken') \r\n                }),\r\n            });\r\n            const data = await res.json();\r\n            if (data.status !== 200) {\r\n                return alert(data.message);\r\n            }\r\n            \r\n            alert(data.message);\r\n            this.setState({\r\n                nameInput: '',\r\n                usersMatched: []\r\n            });\r\n\r\n\r\n        } catch (e) {\r\n            alert(e.message);\r\n        }\r\n    }\r\n\r\n    nameInputChangeHandler(event) {\r\n        this.setState({\r\n            nameInput: event.target.value\r\n        });\r\n    }\r\n\r\n    async searchFriendHandler() {\r\n        const name = this.state.nameInput.trim().toLowerCase();\r\n        if(!name) {\r\n            alert('Name empty!');\r\n        }\r\n        try {\r\n            const url = URL + '/api/friends/searchFriends';\r\n            const res = await fetch(url, {\r\n                method: 'POST',\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ \r\n                    name: name,\r\n                    token: sessionStorage.getItem('assistToken') \r\n                }),\r\n            });\r\n            const data = await res.json();\r\n            if (data.status !== 200) {\r\n                return alert(data.message);\r\n            }\r\n            \r\n            const usersMatched = data.usersMatched;\r\n\r\n            this.setState({\r\n                usersMatched: usersMatched\r\n            });\r\n\r\n\r\n        } catch (e) {\r\n            alert(e.message);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const friends = this.state.usersMatched.map((friend)=>{\r\n            if(friend.email !== this.props.email) return (\r\n                <div key={friend._id} className=\"user-matched-div\">\r\n                    <p><strong>Name: </strong>{friend.name}</p>\r\n                    <p><strong>Email: </strong>{friend.email}</p>\r\n                    <button className=\"btn btn-success\" onClick={()=>this.addFriendHandler(friend.name, friend.email)}>Add Friend</button>\r\n                    <hr></hr>\r\n                </div>\r\n            )\r\n        });\r\n        return (\r\n            <div className=\"add-friends-div\">\r\n                <div className=\"add-friends-search\">\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Search to add new friend:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.nameInput} onChange={this.nameInputChangeHandler}></input>\r\n                    </div>\r\n                    <span><button type=\"submit\" className=\"btn btn-outline-info\" onClick={this.searchFriendHandler}>Search</button></span>\r\n                </div>\r\n                <div className=\"add-friends-matches\">\r\n                    {friends}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddFriends;","import React from 'react';\r\nimport AddFriends from './AddFriends';\r\nimport FriendsList from './FriendsList';\r\nimport '../css/FriendsManager.css';\r\n\r\nlet URL;\r\nif (process.env.NODE_ENV === 'development') {\r\n    URL = 'http://localhost:5000';\r\n} else {\r\n    URL = 'https://connect.aryanabhi.in';\r\n}\r\n\r\nclass FriendsManager extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            friends: [],\r\n            friendSelectedOption: 'Select a friend to see the details: ',\r\n            selectedFriendName: '',\r\n            selectedFriendEmail: '',\r\n            selectedFriendDOB: '',\r\n            selectedFriendAddress: '',\r\n            selectedFriendPhone: '',\r\n            selectedFriendHobby: ''\r\n        };\r\n\r\n        this.friendSelectChangeHandler = this.friendSelectChangeHandler.bind(this);\r\n        this.friendSelectDetailHandler = this.friendSelectDetailHandler.bind(this);\r\n        this.friendSelectDetailClear = this.friendSelectDetailClear.bind(this);\r\n    }\r\n\r\n    async friendSelectDetailHandler() {\r\n        try{\r\n            const token = sessionStorage.getItem('assistToken');\r\n            if(!token) {\r\n              return alert('Token Missing! Kindly sign out and sign in again!');\r\n            }\r\n\r\n            const email = this.state.friendSelectedOption;\r\n            if(email === 'Select a friend to see the details: ') {\r\n                return alert('Select valid option!')\r\n            }\r\n    \r\n            const url = URL + '/api/friends/getFriendDetails';\r\n            const res = await fetch(url, {  \r\n              method: 'POST',\r\n              headers: {'Content-Type': 'application/json'},\r\n              body: JSON.stringify({\r\n                email: email,\r\n                token: sessionStorage.getItem('assistToken')\r\n              })\r\n            });\r\n    \r\n            const data = await res.json();\r\n            if(data.status !== 200) {\r\n              return alert(data.message);\r\n            }\r\n            else {\r\n                const friend = data.friend;\r\n                this.setState({\r\n                    selectedFriendName: data.friend.name,\r\n                    selectedFriendEmail: data.friend.email,\r\n                    selectedFriendDOB: data.friend.dob,\r\n                    selectedFriendAddress: data.friend.address,\r\n                    selectedFriendPhone: data.friend.phone,\r\n                    selectedFriendHobby: data.friend.hobby\r\n                });\r\n            }\r\n    \r\n          }catch(e){\r\n              console.log(e);\r\n            return alert('There was some error!! Please sign out and sign in again');\r\n          }\r\n    }\r\n\r\n    friendSelectChangeHandler(event) {\r\n        this.setState({\r\n            friendSelectedOption: event.target.value\r\n        });\r\n    } \r\n\r\n\r\n    friendSelectDetailClear() {\r\n        this.setState({\r\n            selectedFriendName: '',\r\n            selectedFriendEmail: '',\r\n            selectedFriendDOB: '',\r\n            selectedFriendAddress: '',\r\n            selectedFriendPhone: '',\r\n            selectedFriendHobby: ''\r\n        })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try{\r\n            const token = sessionStorage.getItem('assistToken');\r\n            if(!token) {\r\n              return alert('Token Missing! Kindly sign out and sign in again!');\r\n            }\r\n    \r\n            const url = URL + '/api/friends/getFriends';\r\n            const res = await fetch(url, {  \r\n              method: 'POST',\r\n              headers: {'Content-Type': 'application/json'},\r\n              body: JSON.stringify({\r\n                token: sessionStorage.getItem('assistToken')\r\n              })\r\n            });\r\n    \r\n            const data = await res.json();\r\n            if(data.status !== 200) {\r\n              return alert(data.message);\r\n            }\r\n            else {\r\n              this.setState({\r\n                friends: data.friends\r\n              });\r\n            }\r\n    \r\n          }catch(e){\r\n              console.log(e);\r\n            return alert('There was some error!! Please sign out and sign in again');\r\n          }  \r\n    }\r\n\r\n    render() {\r\n\r\n        let options = [<option key={0}>Select a friend to see the details: </option>];\r\n        this.state.friends.forEach((friend, key)=>{\r\n            options.push(\r\n            <option key={friend._id} value={friend.email}>{friend.name}</option>\r\n            );\r\n        });\r\n\r\n        return(\r\n            <div className=\"friends-manager-div\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <AddFriends email={this.props.email}/>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"friend-list-title\">\r\n                                Here is your friends list:\r\n                            </div>\r\n                            <FriendsList friends={this.state.friends}/>\r\n                        </div>\r\n                    </div>\r\n                    <br></br>\r\n                    <hr></hr>\r\n                    <br></br>\r\n                    <div>\r\n                        <div className=\"select-friends-div\">\r\n                            <select value={this.state.friendSelected} onChange={this.friendSelectChangeHandler}>\r\n                                {options}\r\n                            </select>\r\n                            <span><button className=\"btn btn-success\" onClick={this.friendSelectDetailHandler}>Search</button></span>\r\n                            <span><button className=\"btn btn-warning\" onClick={this.friendSelectDetailClear}>Clear</button></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"selected-friends-details\">\r\n                        <div>\r\n                            <strong>Name: </strong>{this.state.selectedFriendName}\r\n                        </div>\r\n                        <div>\r\n                            <strong>Email: </strong>{this.state.selectedFriendEmail}\r\n                        </div>\r\n                        <div>\r\n                            <strong>Date Of Birth: </strong>{this.state.selectedFriendDOB}\r\n                        </div>\r\n                        <div>\r\n                            <strong>Address: </strong>{this.state.selectedFriendAddress}\r\n                        </div>\r\n                        <div>\r\n                            <strong>Phone: </strong>{this.state.selectedFriendPhone}\r\n                        </div>\r\n                        <div>\r\n                            <strong>Hobby: </strong>{this.state.selectedFriendHobby}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FriendsManager;","import React from 'react';\r\nimport '../css/FriendsList.css';\r\n\r\nclass FriendsList extends React.Component {\r\n  //props.friends[]\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    const friends = this.props.friends.map((friend, key)=>{\r\n      return (\r\n        <div key={key} className=\"friend-div\">\r\n          <strong>{key+1}. </strong><strong>{friend.name}</strong> <i>{friend.email}</i>\r\n        </div>\r\n      );\r\n    })\r\n    return (\r\n      <div className=\"friends-list-div\">\r\n        <div className=\"friends-list\">\r\n          {friends}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FriendsList;","import React from 'react';\r\nimport '../css/SendMessage.css';\r\n\r\nlet URL;\r\nif (process.env.NODE_ENV === 'development') {\r\n    URL = 'http://localhost:5000';\r\n} else {\r\n    URL = 'https://connect.aryanabhi.in';\r\n}\r\n\r\nclass SendMessage extends React.Component {\r\n    //props.friends\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            friendSelectedOption: 'Select a friend to send message to: ',\r\n            message: ''\r\n        }\r\n\r\n        this.friendSelectChangeHandler = this.friendSelectChangeHandler.bind(this);\r\n        this.messageChangeHandler = this.messageChangeHandler.bind(this);\r\n        this.messageClearHandler = this.messageChangeHandler.bind(this);\r\n        this.sendMessageHandler = this.sendMessageHandler.bind(this);\r\n    }\r\n\r\n    friendSelectChangeHandler(event) {\r\n        this.setState({\r\n            friendSelectedOption: event.target.value\r\n        });\r\n    }\r\n\r\n    messageChangeHandler(event) {\r\n        this.setState({\r\n            message: event.target.value\r\n        });\r\n    }\r\n\r\n    messageClearHandler(event) {\r\n        this.setState({\r\n            message: ''\r\n        });\r\n    }\r\n\r\n    async sendMessageHandler() {\r\n        try{\r\n            const token = sessionStorage.getItem('assistToken');\r\n            if(!token) {\r\n              return alert('Token Missing! Kindly sign out and sign in again!');\r\n            }\r\n\r\n            const email = this.state.friendSelectedOption;\r\n            if(email === 'Select a friend to send message to: ') {\r\n                return alert('Select a valid friend!');\r\n            }\r\n\r\n            const message = this.state.message.trim();\r\n            if(!message) {\r\n                return alert('Cant send empty message!');\r\n            }\r\n    \r\n            const url = URL + '/api/messaging/sendMessage';\r\n            const res = await fetch(url, {  \r\n              method: 'POST',\r\n              headers: {'Content-Type': 'application/json'},\r\n              body: JSON.stringify({\r\n                email: email,\r\n                message: message,\r\n                token: sessionStorage.getItem('assistToken')\r\n              })\r\n            });\r\n    \r\n            const data = await res.json();\r\n            if(data.status !== 200) {\r\n              return alert(data.message);\r\n            }\r\n            else {\r\n                alert(data.message);\r\n                this.setState({\r\n                friendSelectedOption: 'Select a friend to send message to: ',\r\n                message: ''\r\n                });\r\n            }\r\n    \r\n          }catch(e){\r\n            console.log(e);\r\n            return alert('There was some error!! Please sign out and sign in again');\r\n          }\r\n    }\r\n\r\n    render() {\r\n        let options = [<option key={0}>Select a friend to send message to: </option>];\r\n        this.props.friends.forEach((friend)=>{\r\n            options.push(\r\n                <option key={friend._id} value={friend.email}>{friend.name}</option>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"friends-select-div\">\r\n                <select value={this.state.friendSelectedOption} onChange={this.friendSelectChangeHandler}>\r\n                    {options}\r\n                </select>\r\n                <textarea value={this.state.message} onChange={this.messageChangeHandler}></textarea>\r\n                <div className=\"send-message-buttons\">\r\n                    <span><button className=\"btn btn-warning\" onClick={this.messageClearHandler}>Clear</button></span>\r\n                    <span><button className=\"btn btn-success\" onClick={this.sendMessageHandler}>Send</button></span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SendMessage;","import React from 'react';\r\nimport '../css/ReceivedMessages.css';\r\n\r\nlet URL;\r\nif (process.env.NODE_ENV === 'development') {\r\n    URL = 'http://localhost:5000';\r\n} else {\r\n    URL = 'https://connect.aryanabhi.in';\r\n}\r\n\r\nclass ReceivedMessages extends React.Component {\r\n    //props.friends\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            messages: []\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try{\r\n            const token = sessionStorage.getItem('assistToken');\r\n            if(!token) {\r\n              return alert('Token Missing! Kindly sign out and sign in again!');\r\n            }\r\n    \r\n            const url = URL + '/api/messaging/getReceivedMessages';\r\n            const res = await fetch(url, {  \r\n              method: 'POST',\r\n              headers: {'Content-Type': 'application/json'},\r\n              body: JSON.stringify({\r\n                token: sessionStorage.getItem('assistToken')\r\n              })\r\n            });\r\n    \r\n            const data = await res.json();\r\n            if(data.status !== 200) {\r\n              return alert(data.message);\r\n            }\r\n            else {\r\n                this.setState({\r\n                    messages: data.messages\r\n                });\r\n            }\r\n    \r\n          }catch(e){\r\n            console.log(e);\r\n            return alert('There was some error!! Please sign out and sign in again');\r\n          }\r\n    }\r\n\r\n    render() {\r\n        \r\n        const messages = this.state.messages.map((message)=>{\r\n            return (\r\n                <div key={message._id} className=\"indiv-msg\">\r\n                    <p><strong>By: </strong>{message.name} <em>[{message.email}]</em></p>\r\n                    <p><strong>Received on:</strong> {message.date}</p>\r\n                    <p>{message.message}</p>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"messages-list\">\r\n                <h5>Received messages: </h5>\r\n                <br></br>\r\n                {messages}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ReceivedMessages;","import React from 'react';\r\nimport '../css/Messaging.css';\r\nimport SendMessage from './SendMessage';\r\nimport ReceivedMessages from './ReceivedMessages';\r\n\r\nlet URL;\r\nif (process.env.NODE_ENV === 'development') {\r\n    URL = 'http://localhost:5000';\r\n} else {\r\n    URL = 'https://connect.aryanabhi.in';\r\n}\r\n\r\nclass Messaging extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            friends: []\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try{\r\n            const token = sessionStorage.getItem('assistToken');\r\n            if(!token) {\r\n              return alert('Token Missing! Kindly sign out and sign in again!');\r\n            }\r\n    \r\n            const url = URL + '/api/friends/getFriends';\r\n            const res = await fetch(url, {  \r\n              method: 'POST',\r\n              headers: {'Content-Type': 'application/json'},\r\n              body: JSON.stringify({\r\n                token: sessionStorage.getItem('assistToken')\r\n              })\r\n            });\r\n    \r\n            const data = await res.json();\r\n            if(data.status !== 200) {\r\n              return alert(data.message);\r\n            }\r\n            else {\r\n              this.setState({\r\n                friends: data.friends\r\n              });\r\n            }\r\n    \r\n          }catch(e){\r\n            console.log(e);\r\n            return alert('There was some error!! Please sign out and sign in again');\r\n          }  \r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container messaging-div\">\r\n                <h3>Hey {this.props.name}! Here you can message your friends :)</h3>\r\n                <div className=\"container messaging-main-div\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\"> \r\n                        <SendMessage friends={this.state.friends} />\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <ReceivedMessages />\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Messaging;","import React from 'react';\r\nimport logo from '../logo.svg';\r\nimport '../css/Portal.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom';\r\n\r\n\r\nimport Home from '../components/Home';\r\nimport Profile from '../components/Profile';\r\nimport FriendsManager from '../components/FriendsManager';\r\nimport Messaging from '../components/Messaging';\r\n\r\n\r\nlet URL;\r\nif (process.env.NODE_ENV === 'development') {\r\n    URL = 'http://localhost:5000';\r\n} else {\r\n    URL = 'https://connect.aryanabhi.in';\r\n}\r\n\r\nclass Portal extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        name: '',\r\n        email: ''\r\n      };\r\n    }\r\n\r\n    async componentDidMount() {\r\n      try{\r\n        const token = sessionStorage.getItem('assistToken');\r\n        if(!token) {\r\n          return alert('Token missing! Please sign out and sign in again!!');\r\n          //do sign out\r\n        }\r\n\r\n        const url = URL + '/api/profile/getProfile';\r\n        const res = await fetch(url, {  \r\n          method: 'POST',\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n            token: sessionStorage.getItem('assistToken')\r\n          })\r\n        });\r\n\r\n        const data = await res.json();\r\n        if(data.status !== 200) {\r\n          return alert(data.message);\r\n          //do sign out\r\n        }\r\n\r\n        else {\r\n          this.setState({\r\n            name: data.user.name,\r\n            email: data.user.email\r\n          });\r\n        }\r\n\r\n      }catch(e){\r\n        return alert('There was some error! Please sign out and sign in again!!');\r\n      }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          \r\n          <Router>\r\n            <div className=\"container\">\r\n              <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n                <span className=\"navbar-brand nav-logo\">\r\n                  <img src={logo} className=\"Portal-logo\" alt=\"logo\" />\r\n                  <h2>CONNECT</h2>\r\n                </span>\r\n                <button className=\"navbar-toggler portal-navbar-toggle-btn\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerPortal\" aria-controls=\"navbarTogglerPortal\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                  <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarTogglerPortal\">\r\n                  <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/profile\">Profile</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/friends\">Friends</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/messaging\">Messaging</Link>\r\n                    </li>\r\n                  </ul>\r\n                  <span className=\"form-inline my-2 my-lg-0\">\r\n                    <button className=\"btn btn-warning\" onClick={this.props.signOutHandler}>Sign Out</button>\r\n                  </span>\r\n                </div>\r\n              </nav>\r\n        \r\n            {/* A <Switch> looks through its children <Route>s and\r\n                renders the first one that matches the current URL. */}\r\n            <Switch>\r\n              <Route path=\"/messaging\">\r\n                <Messaging name={this.state.name} email={this.state.email}/>\r\n              </Route>\r\n              <Route path=\"/friends\">\r\n                <FriendsManager name={this.state.name} email={this.state.email}/>\r\n              </Route>\r\n              <Route path=\"/profile\">\r\n                <Profile name={this.state.name}/>\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <Home name={this.state.name} />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Portal;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport '../css/SignInUpForm.css';\r\n\r\nlet URL;\r\nif (process.env.NODE_ENV === 'development') {\r\n    URL = 'http://localhost:5000';\r\n} else {\r\n    URL = 'https://connect.aryanabhi.in';\r\n}\r\n\r\nclass SignUpForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            pass: '',\r\n            confPass: '',\r\n            errorMsg: ''\r\n        };\r\n        this.signUpHandler = this.signUpHandler.bind(this);\r\n        this.nameChangeHandler = this.nameChangeHandler.bind(this);\r\n        this.emailChangeHandler = this.emailChangeHandler.bind(this);\r\n        this.passChangeHandler = this.passChangeHandler.bind(this);\r\n        this.confPassChangeHandler = this.confPassChangeHandler.bind(this);\r\n    }\r\n\r\n    nameChangeHandler (event) {\r\n        this.setState({\r\n            name: event.target.value\r\n        });\r\n    }\r\n\r\n    emailChangeHandler (event) {\r\n        this.setState({\r\n            email: event.target.value\r\n        });\r\n    }\r\n\r\n    passChangeHandler (event) {\r\n        this.setState({\r\n            pass: event.target.value\r\n        });\r\n    }\r\n\r\n    confPassChangeHandler (event) {\r\n        this.setState({\r\n            confPass: event.target.value\r\n        });\r\n    }\r\n\r\n    async signUpHandler(event){\r\n        //ckeck the sign up details and verify with database, then call signUpHandler()\r\n        event.preventDefault();\r\n        let name = this.state.name.trim().toLowerCase();\r\n        let email = this.state.email.trim();\r\n        let pass = this.state.pass.trim();\r\n        let confPass = this.state.confPass.trim();\r\n\r\n        if(!name) {\r\n            this.setState({\r\n                errorMsg: 'Name empty!'\r\n            });\r\n        }\r\n        if(!email) {\r\n            this.setState({\r\n                errorMsg: 'Email empty!'\r\n            });\r\n        }\r\n        else if(!pass) {\r\n            this.setState({\r\n                errorMsg: 'Password empty!'\r\n            });\r\n        }\r\n        else if(!confPass) {\r\n            this.setState({\r\n                errorMsg: 'Conf password empty!'\r\n            });\r\n        }\r\n        else if(pass!==confPass){\r\n            this.setState({\r\n                errorMsg: 'Pass and conf pass dont match!'\r\n            });\r\n        }\r\n        else{\r\n            this.setState({\r\n                errorMsg: ''\r\n            });\r\n            try {\r\n                const url = URL + '/api/authenticate/signUp';\r\n                const res = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({ \r\n                        name: name,\r\n                        email: this.state.email,\r\n                        password: this.state.pass\r\n                    }),\r\n                    headers: { \"Content-Type\": \"application/json\" }\r\n                });\r\n                const data = await res.json();\r\n                if (data.status !== 200) {\r\n                    return alert(data.message);\r\n                }\r\n                \r\n                const token = data.token;\r\n                sessionStorage.setItem('assistToken', token);\r\n\r\n                this.props.doSignUp();\r\n\r\n            } catch (e) {\r\n                alert(e);\r\n            }\r\n\r\n        }\r\n  \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container signInUpDiv\">\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Name:</label>\r\n                        <input type=\"text\" className=\"form-control\" onChange={this.nameChangeHandler} id=\"signUp-name\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Email:</label>\r\n                        <input type=\"email\" className=\"form-control\" onChange={this.emailChangeHandler} id=\"signUp-email\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Password:</label>\r\n                        <input type=\"password\" className=\"form-control\" onChange={this.passChangeHandler} id=\"signUp-password\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Confirm Password:</label>\r\n                        <input type=\"password\" className=\"form-control\" onChange={this.confPassChangeHandler} id=\"SignUp-confirm-password\"></input>\r\n                    </div>\r\n                    <p className='errorMsg'>{this.state.errorMsg}</p>\r\n                    <span><button type=\"button\" className=\"btn btn-outline-info\" onClick={this.signUpHandler}>Sign Up</button></span>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUpForm;","import React from 'react';\r\nimport '../css/SignInUpForm.css';\r\n\r\nlet URL;\r\nif (process.env.NODE_ENV === 'development') {\r\n    URL = 'http://localhost:5000';\r\n} else {\r\n    URL = 'https://connect.aryanabhi.in';\r\n}\r\n\r\nclass SignInForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            errorMsg: ''\r\n        };\r\n        this.signInHandler = this.signInHandler.bind(this);\r\n        this.emailChangeHandler = this.emailChangeHandler.bind(this);\r\n        this.passwordChangeHandler = this.passwordChangeHandler.bind(this);\r\n    }\r\n\r\n    emailChangeHandler(event) {\r\n        this.setState({\r\n            email: event.target.value\r\n        });\r\n    }\r\n\r\n    passwordChangeHandler(event) {\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n\r\n    async signInHandler(event) {\r\n        //check sign in details and verify with database, then call doSignIn\r\n        event.preventDefault();\r\n        let email = this.state.email.trim();\r\n        let password = this.state.password.trim();\r\n        if(!email) {\r\n            this.setState({\r\n                errorMsg: 'Email empty!'\r\n            });\r\n        }\r\n        else if(!password) {\r\n            this.setState({\r\n                errorMsg: 'Password empty!'\r\n            });\r\n        }\r\n        else{\r\n            this.setState({\r\n                errorMsg: ''\r\n            });\r\n            try {\r\n                const url = URL + '/api/authenticate/signIn';\r\n                const res = await fetch(url, {\r\n                    method: 'POST',\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({ \r\n                        email: this.state.email,\r\n                        password: this.state.password \r\n                    }),\r\n                });\r\n                const data = await res.json();\r\n                if (data.status !== 200) {\r\n                    return alert(data.message);\r\n                }\r\n                \r\n                const token = data.token;\r\n                sessionStorage.setItem('assistToken', token);\r\n\r\n                this.props.doSignIn();\r\n\r\n            } catch (e) {\r\n                alert(e.message);\r\n            }\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container signInUpDiv\">\r\n                <form noValidate>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Email:</label>\r\n                        <input type=\"email\" className=\"form-control\" onChange={this.emailChangeHandler} id=\"signIn-email\" required=\"required\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Password:</label>\r\n                        <input type=\"password\" className=\"form-control\" onChange={this.passwordChangeHandler} id=\"signIn-password\" required=\"required\"></input>\r\n                    </div>\r\n                    <p className='errorMsg'>{this.state.errorMsg}</p>\r\n                    <span><button type=\"submit\" className=\"btn btn-outline-info\" onClick={this.signInHandler}>Sign In</button></span>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignInForm;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Portal from './components/Portal';\nimport SignUpForm from './components/SignUp';\nimport SignInForm from './components/SignIn';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false\n    };\n    this.signOutHandler = this.signOutHandler.bind(this);\n    this.doSignIn = this.doSignIn.bind(this);\n    this.doSignUp = this.doSignUp.bind(this);\n  }\n\n  signOutHandler(e) {\n    sessionStorage.removeItem('assistToken');\n    this.setState({\n      isLoggedIn: false\n    });\n  }\n\n  doSignIn(e) {\n    this.setState({\n      isLoggedIn: true\n    });\n  }\n\n  doSignUp(e) {\n    this.setState({\n      isLoggedIn: true\n    });\n  }\n\n  render() {\n    const LoggedInContent = <Portal signOutHandler={this.signOutHandler}/>;\n\n    const home = (\n      <div className=\"container\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n        <div className=\"container home-desc\">\n          <h2><strong>Connect</strong></h2>\n          <h4><em>A social networking web application</em></h4>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-1\"></div>\n            <div className=\"col-md-4 signInUpContainer\">\n              <SignInForm doSignIn={this.doSignIn}></SignInForm>\n            </div>\n            <div className=\"col-md-2\">\n\n            </div>\n            <div className=\"col-md-4 signInUpContainer\">\n              <SignUpForm doSignUp={this.doSignUp}></SignUpForm>\n            </div>\n            <div className=\"col-md-1\"></div>\n          </div>\n        </div>\n        <hr></hr>\n        <div className=\"footer\">\n          <p>Designed as part of our lab assignment of Software Engineering Lab.</p>\n          <p>Designed by: <strong>Team Dextro</strong></p>\n          <p>1. Abhishek Aryan BE/10130/17</p>\n          <p>2. Rohit Hembrom BE/10131/17</p>\n          <p>3. Gaurav Singh BE/10137/17</p>\n        </div>\n      </div>\n    );\n\n    return (\n      <div className=\"container-fluid home\">\n        {this.state.isLoggedIn ? LoggedInContent : home}\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}